export enum DataUploadMode {
  INTERVAL = 'INTERVAL',
  DISTANCE = 'DISTANCE',
  CORNER_CORRECTION = 'CORNER_CORRECTION',
  ACC_STATUS_CHANGE = 'ACC_STATUS_CHANGE',
  LAST_POSTION_BEFORE_STATIC = 'LAST_POSTION_BEFORE_STATIC',
  LAST_EFFECTIVE_POINT_WHEN_NETWORK_RECOVERS = 'LAST_EFFECTIVE_POINT_WHEN_NETWORK_RECOVERS',
  UPLOAD_REGULARLY_STATIC = 'UPLOAD_REGULARLY_STATIC',
  LAST_LAT_LNG_DEVICE_STATIC = 'UPLOAD_REGULARLY_STATIC',
  LAST_LAT_LNG_DEVICE_STATIC_TIME_UPDATE = 'LAST_LAT_LNG_DEVICE_STATIC_TIME_UPDATE',
  UPLOAD_LOCATION_AFTER_POWER_ON = 'UPLOAD_LOCATION_AFTER_POWER_ON',
  UPLOAD_LOCATION_SIDE_KEY_TRIGGER = 'UPLOAD_LOCATION_SIDE_KEY_TRIGGER',
  UPDATE_EPHEMERIS_AND_UPLOAD_GPS_DATA_COMPULSORILY = 'UPDATE_EPHEMERIS_AND_UPLOAD_GPS_DATA_COMPULSORILY',
  UNKONW = 'UNKONW',
}

export function dataUploadModeFromCode(code: number): DataUploadMode {
  switch(code) {
    case 0x00: return DataUploadMode.INTERVAL;
    case 0x01: return DataUploadMode.DISTANCE;
    case 0x02: return DataUploadMode.CORNER_CORRECTION;
    case 0x03: return DataUploadMode.ACC_STATUS_CHANGE;
    case 0x04: return DataUploadMode.LAST_POSTION_BEFORE_STATIC;
    case 0x05: return DataUploadMode.LAST_EFFECTIVE_POINT_WHEN_NETWORK_RECOVERS;
    case 0x06: return DataUploadMode.UPDATE_EPHEMERIS_AND_UPLOAD_GPS_DATA_COMPULSORILY;
    case 0x07: return DataUploadMode.UPLOAD_LOCATION_SIDE_KEY_TRIGGER;
    case 0x08: return DataUploadMode.UPLOAD_LOCATION_AFTER_POWER_ON;
    case 0x0A: return DataUploadMode.LAST_LAT_LNG_DEVICE_STATIC_TIME_UPDATE;
    case 0x0D: return DataUploadMode.LAST_LAT_LNG_DEVICE_STATIC;
    case 0x0E: return DataUploadMode.UPLOAD_REGULARLY_STATIC;
    default: return DataUploadMode.UNKONW
  }

}